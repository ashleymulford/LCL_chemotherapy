#LCL_chemotherapy Progress:

#Individual Populations:

#1 Explored data available in /home/wheelerlab3/Data/LCL_chemotherapy/

    Drug            populations         uM_concentrations               best_phenotype  hrs_drug_treatment      serum_used      phenotype               commercial_assay   exception_populations   exception_uM_concentrations
1.  ara-c           CEU,YRI,ASN         0,1,5,10,40                     AUC             72                      FBS             cell_growth_inhibition  alamarBlue
Ara-C is a triphosphate nucleotide analog that inhibits nuclear DNA synthesis. (PHARMGKB)
2.  capecitabine    CEU,YRI,ASN         0,2.5,10,20,40                  AUC             72                      FBS             cell_growth_inhibition  alamarBlue
Capecitabine inhibits thymidylate synthase (TYMS) and incorporates drug metabolites into DNA and RNA. (PHARMGKB)
3.  carboplatin     CEU,YRI,ASN         0,10,20,40,80                   IC50            72                      FBS             cell_growth_inhibition  alamarBlue
Carboplatin acts by forming platinum-DNA adducts, which leads to cell-cycle arrest and apoptosis. (PHARMGKB)
4.  cisplatin       CEU,YRI,ASN         0,1,2.5,5,10,20                 IC50            48                      FBS             cell_growth_inhibition  alamarBlue         ASN                     0,0.1,0.5,1,5,10,20,40
Cisplatin is an alkylating agent which destroys cancerous cells through DNA crosslinking, thereby preventing cell division and growth. (PHARMGKB)
5.  daunorubicin    CEU,YRI             0,0.0125,0.025,0.05,0.1,0.2,1   IC50            72                      FBS             cell_growth_inhibition  alamarBlue
Daunorubicin is an antineoplastic drug that inhibits topoisomerase II activity by stabilizing the DNA-topoisomerase II complex, preventing the religation portion of the ligation-religation reaction catalyzed by topoisomerase II. (DRUGBANK)
6.  etoposide       CEU,YRI             0,0.02,0.1,0.5,2.5              IC50            72                      FBS             cell_growth_inhibition  alamarBlue
Etoposide stabilizes the double stranded DNA cleavage normally catalyzed by topoisomerase II and inhibits faithful religation of DNA breaks creating antitumor effects. (PHARMGKB)
7.  paclitaxel      CEU,YRI             0,0.00625,0.0125,0.05           AUC             72                      BGS             cell_growth_inhibition  alamarBlue
Paclitaxel blocks cell division by binding to Î±-tubulin, which stabilizes the microtubules, leading to cell death. (PHARMGKB)
8.  pemetrexed      CEU,YRI             0,0.02,0.1,0.5                  AUC             72                      FBS             cell_growth_inhibition  alamarBlue
Pemetrexed is an antineoplastic drug that disrupts the folate cycle, which is essential for synthesis and various cellular functions. (PHARMGKB)

#Working with: YRI (8 drugs), CEU (8 drugs), and ASN (4 drugs) 


#2 Create relationship matrix (GRM) in gemma: requires genotype file and phenotype file
#Individuals in these populations are related, parent child trios, must account for this when running association studies
#will use: gemma -g genotype.geno.gz -p phenotype.txt -gk 1 -maf 0.05 -o output_name
    #working with YRI:
       Genotype file in BIMBAM format: YRI.TGP_and_imputed.rmBAD.20130526.geno.gz
       Phenotype file: must make from master_cyctotoxicity file
       
#Make phenotype file in R, use only YRI, use only one phenotype
    #no header, no IDs for .txt for gemma
    #With header/IDs (create for reference)
        pheno <- read.table("/home/ashley/LCL_chemotherapy/master_cytotoxicity_info_130311_plus_igrowth.txt", header = T)
        YRI <- subset(pheno, pop == "YRI")
        pheno_YRI_araclog2IC50 <- YRI[, 1:13]
    #Without header/IDs (create for use)
        pheno_YRI_araclog2IC50_noids <- pheno_YRI_araclog2IC50[, 5:13]

    #More individuals with phenotypes (180) than genotypes (178) - need the same amount and same individuals
    #Individuals also must be in the same order in both geno and pheno files
    
    #Next must order phenotype file to match order of genotype file
        fam <- read.table("/home/ashley/LCL_chemotherapy/YRI.chr10.TGP_and_imputed.20130416.exclude_BAD_SNPs.fam")
        colnames(fam) <- c("FID", "IID", "FatID", "MatID", "Sex", "Pheno")
        pheno_ordered <- left_join(fam, pheno_YRI_araclog2IC50, by = c("FID" = "FID", "IID" = "IID"))
        write.table(pheno_ordered, "/home/ashley/LCL_chemotherapy/ordered_pheno_YRI_araclog2IC50.txt", col.names = T, row.names = T, sep = "\t")
        #file with no ids or col names is one needed for gemma use
        pheno_ordered_noids <- pheno_ordered[, 10:17]
        write.table(pheno_ordered_noids, "/home/ashley/LCL_chemotherapy/ordered_pheno_YRI_araclog2IC50_noids.txt", col.names = F, row.names = F, sep = "\t")
    
#Run gemma
    gemma -g YRI.TGP_and_imputed.rmBAD.20130526.geno.gz -p ordered_pheno_YRI_araclog2IC50_noids.txt -gk 1 -maf 0.05 -o YRI_relationship_matrix_maf
    created files: YRI_relationship_matrix_maf.cXX.txt & YRI_relationship_matrix_maf.log.txt
    
    
#3 Make drug based phenotype files in R for GWAS:
    #Script: 03_GWAS_GEMMA_phenos.R
    master_phenos <- read.table ("/home/ashley/LCL_chemotherapy/master_cyctotoxicity_info_130311_plus_igrowth.txt", header = T)
    YRI_master_phenos <- subset(master_phenos, pop == "YRI")
    YRI_master_phenos_ordered <- left_join(fam, YRI_master_pheno, by = c("FID" = "FID", "IID" = "IID", "FatID" = "father", "MatID" = "mother", "Sex" = "sex"))
    
    # for arac:
    YRI_arac_pheno <- select(YRI_master_phenos_ordered, 1:13, - Pheno, contains("ARAC"))
    
    # general:
    YRI_drug_pheno <- select(YRI_master_phenos_ordered, 1:13, - Pheno, contains("DRUGABBREV"))
     
    
#4 Run (univariate mixed linear) GWAS in gemma using GRM:
    #Template: gemma -g genotype.geno -p phenotype.txt -a anno_snp.info -k relationship_matrix.txt  -lmm 4 -o pop_GWAS_drug
    #For cisplatin: pheno IC50, use rank normalized (Rn)
    
    #In R: 
    #file with ids and phenotype (for reference)
    YRI_cis_bestpheno <- select(YRI_cis_pheno, 1:12, contains("CIS_RnIC50"))
    write.table(YRI_cis_bestpheno, "/home/ashley/LCL_chemotherapy/YRI_cis_bestpheno.txt", col.names = T, row.names = F, sep = "/t")
    #file phenotype only (for gemma)
    YRI_cis_bestpheno_noids <- select(YRI_cis_bestpheno, contains("CIS"))
    write.table(YRI_cis_bestpheno_noids, "/home/ashley/LCL_chemotherapy/YRI_cis_bestpheno_noids.txt", col.names = F, row.names = F, sep = "/t")
    
    #In Gemma:
    gemma -g YRI.TGP_and_imputed.rmBAD.20130526.geno.gz -p YRI_cis_bestpheno_noids.txt -a YRI.TGP_and_imputed.rmBAD.20130526.snp.info.gz -k YRI_relationship_matrix_maf.cXX.txt -lmm 4 -o YRI_GWAS_cis
    
    #error: segmentation fault
    
    #Unzip snp file with:
    gunzip filename.snp.info.gz
    run again
    gemma -g YRI.TGP_and_imputed.rmBAD.20130526.geno.gz -p YRI_cis_bestpheno_noids.txt -a YRI.TGP_and_imputed.rmBAD.20130526.snp.info -k YRI_relationship_matrix_maf.cXX.txt -lmm 4 -o YRI_GWAS_cis
    
    #Code is running...
    created files: YRI_GWAS_cis.assoc.txt & YRI_GWAS_cis.log.txt
    
    #p-value is nan/-nan.
    #try with carboplatin
    #wanted to try unzipping genotype file, as this worked with snp file
    gunzip filename.geno.gz
    #run with unzipped geno
    gemma -g YRI.TGP_and_imputed.rmBAD.20130526.geno -p YRI_carbo_bestpheno_noids.txt -a YRI.TGP_and_imputed.rmBAD.20130526.snp.info -k YRI_relationship_matrix_maf.cXX.txt -lmm 4 -o YRI_GWAS_carbo
    
    #code ran and sure enough I got p-values this time!!
    
    #Script: 04_GWAS_GEMMA_loop.sh
        #Loops through drugs and pops, outputs one file per pop
        #must run ASN separate from YRI and CEU as it has fewer drugs
    
    #code takes ~ an hour to run. To run in the background instead:
    #run in command line with:
    qsub backgroundjob.sh
    #check status with:
    qstat
    #end a task with:
    qdel task_num
 
    ##repeat the steps above with other drugs and populations


#5 Make QQ and Manhattan plots in R:
    #Script: 05_GWAS_plots.R
        #Creates qq and manhattan plots for each drug in each population
        #Run three times, once per pop (loops through drugs)

  
#6 Run Predixcan:
   
#6.1 Get files/info needed for Predixcan:
    #Dosagefile_path: need a directory as the input. Must make 22 dosage files (one for each chr) and put in that directory!
        #Convert files from bimbam format to dosage format:
        #Script: 99_BIMBAM_to_PX_dosages.py (found in Ad_PX_pipe, forked from aandaleon)
            #input: geno file and snp info file, both in BIMBAM format
                #input files:
                geno: YRI.TGP_and_imputed.rmBAD.20130526.geno
                snp: YRI.TGP_and_imputed.rmBAD.20130526.snp.info
            #Run: python 99_BIMBAM_to_PX_dosages.py --anno YRI.TGP_and_imputed.rmBAD.20130526.snp.info --BIMBAM YRI.TGP_and_imputed.rmBAD.20130526.geno --output dosages.txt
            #output: combined file in dosage format, which is sebsquently split into 22 files
            #use awk command: awk '$1 == #' dosages.txt > chr#.txt, where # is 1 through 22, run 22 times
                #output files, chr1-22: predixcan_dosages/chr#.txt
                #must zip files for PrediXcan to run, use gzip     
    #Dosage_prefix: always chr!
    #Samples_file: Must make!
        #Make file with FID and IID only (in correct order corresponding to columns of individuals in geno file)
        #Use R, extract first two columns of fam file:
            samples <- fam[1:2]
            write.table(samples, file = "samples.txt", sep = "\t", row.names = F, col.names = F, quote = F)
            #output file: sample.txt
    #Weights: Prediction databases, run all in loop!
        #European predictors derived from various organ tissues samples
        #Located in: /home/wheelerlab3/Data/PrediXcan_db/GTEx-V7_HapMap-2017-11-29/
        #5 additional multi-ethnic predictors derived from white blood cell samples
        #Located in: /home/ryan/enet_scripts/new_MESA/dbs/  use: filtered_rsid_hg19.db   
    #Output_prefix: Change with each run!
        #Make a prefix for each db:
            #Example for YRI and db 1: YRI_results_Adipose_Subcutaneous
    
#6.2 Run PrediXcan with GTEx V7 tissue dbs:
    #Script: 06a_PrediXcan1_loop.sh
        #Goes through each tissue db, run once per pop
        #Template for step one: PrediXcan.py --predict --dosages dosagefile_path --dosages_prefix chr --samples samples_file --weights prediction_db --output_prefix results/tissue
        #YRI Example with 1st db: PrediXcan.py --predict --dosages /home/ashley/LCL_chemotherapy/YRI/YRI_predixcan_dosages --dosages_prefix chr --samples /home/ashley/LCL_chemotherapy/YRI/samples.txt --weights /home/wheelerlab3/Data/PrediXcan_db/GTEx-V7_HapMap-2017-11-29/gtex_v7_Adipose_Subcutaneous_imputed_europeans_tw_0.5_signif.db --output_prefix YRI_results_Adipose_Subcutaneous    
    #Convert PrediXcan Step one output to "geno" input for GEMMA
        #Script: 03_pred_exp_to_GEMMA_input.R (found in px_his_chol, forked from WheelerLab)
            #Creates "geno" input files for gemma
    #Run gemma to account for relatedness:
        #Script: 06b_PrediXcan2_loop.sh
        #Goes through each tissue db, drug, and pop; must run ASN separtely though as it has 4 of 8 drugs
        #YRI example with 1st db and carboplatin: gemma -g /home/ashley/LCL_chemotherapy/YRI/YRI_assoc_gemma_input/Adipose_Subcutaneous -notsnp -p /home/ashley/LCL_chemotherapy/YRI/YRI_phenotypes/YRI_carbo_bestpheno_noids.txt -k YRI_relationship_matrix_maf.cXX.txt -lmm 4 -o YRI_assoc_carbo_[tissue]
            #YRI has 8 drugs phenos
         
#6.3 Run PrediXcan with MESA dbs:
    #Same process as above but pulls dbs from diff directory


#7 Run MulTiXcan:
    #Measures across all tissues, use only GTEx v7, no MESA
    #Script: 07a_MulTiXcan_phenos.R
        #Create pheno files in R: three columns: FID, IID, Pheno (include headers)
    #Script: 07b_MulTiXcan_loop.sh
        #Uses output from PrediXcan step one to measure expression across all tissues
        #outputs one file per drug per pop
        #Template for MultiXcan: MulTiXcan.py --expression_folder /home/ashley/LCL_chemotherapy/${pop}/${pop}_predixcan_predict_output --expression_pattern "${pop}_results_(.*)_predicted_expression.txt" --input_phenos_file /home/ashley/LCL_chemotherapy/${pop}/${pop}_multixcan_phenos/${pop}_${drug}_pheno --input_phenos_column Pheno --mode linear --output /home/ashley/LCL_chemotherapy/${pop}/${pop}_multixcan_output/${pop}_${drug}_multixcan
    

#Analyze results:

#8 GWAS results:  
    #Condense GWAS results:
        #Script: 08_GWAS_output_condesner.R
            #Pulls out results with 10^-5 and 10^-7 significance from each drug file, outputs two files
            #run three times total, one per population, total of six output files
    #Already made QQ and Manhattan plots in step 5
    #Make LocusZoom Plots: http://locuszoom.org/genform.php?type=yourdata
        #p-value column: p_wald, marker coulmn: rs
        #Set pop accordingly (under optional controls)
            #Made two version of each, one with individual pop (2010) and one with super pop (2014)
        #Created plots for: ASN carbo (3), CEU etop (1), and YRI cis (1), dauno (2), and etop (5)
            #CEU had no genome-wide significant results, made one graph of the most significant SNP
    #Go through top SNPs on NCBI: (genome-wide significant)
      #ASN Carboplatin: chr 9: rs2100011, rs2254812, rs2254813
      #YRI Cisplatin: chr 3: rs10510241
           Daunorubicin: chr 4: rs60507300, rs61079639
           Etoposide: chr 12: rs2711728, rs2711729, rs7960974, rs7971310, rs7979399
    

#9 PrediXcan results:
    #Combine Predixcan results:
        #Script: 09a_PrediXcan_output_combiner.R
            #Combine all tissue files into one file (per drug per pop)
            #run twenty times total
        #Script: 09b_PrediXcan_total_gene_count.R
            #Creates data frame of the number of genes measured in each tissue per population
    #Adjust p-values by running FDR adjustments:
        #Script: 09c_PrediXcan_pvalue_adjuster.R
            #input: combined files (one per drug per pop)
            #adjust p-values to account for false discovery, with BH and Bonferroni methods
            #join with bp_chrome file, which contains the chr # and bp position for each gene (needed for plotting)
            #run three times, once per pop (loops through drugs)         
    #Make QQ and Manhattan plots in R:
        #Script: 09d_PrediXcan_plots.R
            #Creates QQ and Manhattan plots for each drug in each population
            #Run three times, once per pop (loops through drugs)
    #Run FUMA, gene2func: https://fuma.ctglab.nl/gene2func
        #Script: 09e_PrediXcan_FUMA.R
            #Creates files with top hits for each drug (approx 100 genes) - this is the input file for: Genes of interest
            #Creates file with list of all genes tested in multixcan - this is the input file for: Background genes
        #For Gene expression data sets select both GTEx v7 options
        #Title according to pop, software, and drug; ex: YRI_PrediXcan_arac
        #Look through gene sets
    #Compile top hits into single file, one per pop
        #Script: 09f_PrediXcan_top_genes.R
            #Run with each pop, compiles top results across drugs into single file
            #Threshold: adj bonferroni p-values < 1
    #Look up top hits by ID on NCBI:
      #ASN Carboplatin top hit:
        #chr 5: FAM173B aka ATPSCKMT - ATP synthase c subunit lysine N-methyltransferase
    #Could make additional plots with FUMA, but not really worth it, not enough significant results with PrediXcan
        

#10 MulTiXcan results:
    #Adjust p-values by running FDR adjustments:
        #Script: 10a_MulTiXcan_pvalue_adjuster.R
            #adjust p-values to account for false discovery, with BH and Bonferroni methods
            #join with bp_chrome file, which contains the chr # and bp position for each gene (needed for plotting)
            #run three times, once per pop (loops through drugs)
    #Make QQ and Manhattan plots in R:
        #Script: 10b_MulTiXcan_plots.R
            #Creates QQ and Manhattan plots for each drug in each population
            #Run three times, once per pop (loops through drugs)
    #Run FUMA, gene2func: https://fuma.ctglab.nl/gene2func
        #Script: 10c_MulTiXcan_FUMA.R
            #Creates files with top hits for each drug (approx 100 genes) - this is the input file for: Genes of interest
            #Creates file with list of all genes tested in multixcan - this is the input file for: Background genes
        #For Gene expression data sets select both GTEx v7 options
        #Title according to pop, software, and drug; ex: YRI_MulTiXcan_arac
        #Look through gene sets
    #Compile top hits into single file, one per pop
        #Script: 10d_MulTiXcan_top_genes.R
            #Run with each pop, compiles top results across drugs into single file
            #Threshold: adj bonferroni p-values < 1
    #Look up top hits by ID on NCBI:
      #YRI Capecitabine top hits:
        #chr 10: CCAR1 - cell division cycle and apoptosis regulator 1
        #chr 20: RNF24 - ring finger protein 24 
        #chr 11: SOX6 - SRY-box transcription factor 6
        #chr 20: MGME1 - mitochondrial genome maintenance exonuclease 1
        #chr 15: RAB8B - member RAS oncogene family
        #chr 7:  GPR37 - G protein-coupled receptor 37
        #chr 19: KLK12 - kallikrein related peptidase 12
        #chr 2:  SEPHS1P6 - selenophosphate synthetase 1 pseudogene 6
        #chr 6:  VIMP1 - aka VIM2P vimentin 2, pseudogene
        #chr 8:  FAM90A20P - family with sequence similarity 90 member A20, pseudogene
        #chr 11: RP11-680H20.2 - ?
        


#Combined Populations:

#11 Create files:
    #Order of populations in files created: ASN, CEU, YRI
    #Create snp.info file with snps found in all three populations
        #Script: 11a_ALL_snp_info.R
    #Create pheno file with individuals from all three populations (order must match fam/geno files)
        #Script: 11b_ALL_pheno.R
    #Create fam file with all three populations
        #Script: 11c_ALL_fam.R
    #create geno file (BIMBAM format) with all three populations
        #Script: 11d_ALL_geno.R
        #BIMBAM format: columns: rsID allele1 allele0 p1 p2 ... p(n), n = 557 in this study
            #allele1 = reference allele, allele0 = alternate allele
            #dosages are of the ref allele (0 = 0 of the reference allele and 2 of the alternate allele; 2 = 2 of the reference allele and 0 of the alternate allele, 1 = 1 reference allele and 1 alternate allele)
        #files with all pops are orderd: ASN (201 people), CEU (178 people), and YRI (178 people)


#12 Run Principle Components Analysis in KING and create covariates file:
    #Must account for population stratification when running association tests in later steps, calculating covariates does this
    #Use both PLINK and KING to do this as KING requires bed/bim/fam input
    #Convert from BIMBAM to PED/MAP, only need a subset of 100000 snps
        #Script: 12a_ALL_subset_map.R & 12b_ALL_subset_ped.py
    #Run PCA
        #In PLINK, get bed/bim/fam from ped/map:
        plink --ped ALL_subset.ped --map ALL_subset.map --make-bed --out ALL_subset
        #In KING, run pca (accounts for relatedness amongst individuals):
        king --pca -b ALL_subset.bed
        #Output: kingpc.txt
    #Make PCA plots and covariates file for gemma
        #Script: 12c_PCA_plots.R
            #uses pcas from KING


#13 Create relationship matrix:
    #Make relationship matrix with GEMMA:
    #Template for relationship matrix: gemma -g genotype.geno.gz -p phenotype.txt -gk 1 -maf 0.05 -o output_name
        #geno must be zipped
    #Make pheno file with any individual drug
        #ex with arac:
        ALL_pheno<-fread("/home/ashley/LCL_chemotherapy/ALL/ALL_pheno_orderedbyfam_ASN_CEU_YRI.txt")
        ALL_arac<-select(ALL_pheno, 29)
        fwrite(ALL_arac, "/home/ashley/LCL_chemotherapy/ALL/ALL_phenotypes/ALL_arac_bestpheno_noids.txt", na = "NA", col.names = F)
    #created files ALL_relationship_matrix_maf.cXX.txt & ALL_relationship_matrix_maf.log.txt
    
    
#14 Run (univariate mixed linear) GWAS in gemma with relationship matrix and covariates:
    #Template: gemma -g genotype.geno -p phenotype.txt -a anno_snp.info -k relationship_matrix.txt -c covariates.txt -lmm 4 -o pop_GWAS_drug
        #geno must be unzipped
    #Make individual drug pheno files for input
        #Script: 14a_GWAS_phenos_ALL.R
    #Run GWAS for all drugs
        #Script: 14b_GWAS_GEMMA_ALL_loop.sh
        #include covariates file with -c, generated in pca 
            #format for GEMMA, rows are people, columns are covariates


#15 Make QQ and Manhattan plots in R:
    #Script: 05_GWAS_plots.R
        #Creates qq and manhattan plots for each drug
        #Run with pop ALL
    #Genome-wide significance for ALL: 
        Etoposide: chr 12: rs2711728, rs2711729 (same as YRI GWAS results)
        #made LocusZoom plots for these snps
        
    
#16 Run PrediXcan:
    #Make dosages: need a directory as the input. Must make 22 dosage files (one for each chr) and put in that directory!
        #Convert files from bimbam format to dosage format:
        #Script: 99_BIMBAM_to_PX_dosages.py (found in Ad_PX_pipe, forked from aandaleon)
            #input: geno file and snp info file, both in BIMBAM format
        #Run: python 99_BIMBAM_to_PX_dosages.py --anno ALL_snp.info --BIMBAM ALL_orderedby_ASN_CEU_YRI.geno --output dosages.txt
            #output: combined file in dosage format, which is sebsquently split into 22 files
        #Use awk command: awk '$1 == #' dosages.txt > chr#.txt, where # is 1 through 22, run 22 times
                #output files, chr1-22: predixcan_dosages/chr#.txt
                #must zip files for PrediXcan to run, use gzip    
    #Make sample file: FID and IID only (in correct order corresponding to columns of individuals in geno file)
    #Weights: Prediction databases, run all in loop!
        #European predictors derived from various organ tissues samples
            #Located in: /home/wheelerlab3/Data/PrediXcan_db/GTEx-V7_HapMap-2017-11-29/
        #5 additional multi-ethnic predictors derived from white blood cell samples
            #Located in: /home/ryan/enet_scripts/new_MESA/dbs/  use: filtered_rsid_hg19.db  
    #For WheelerLab2, must download PrediXcan script and dbs (weights):
        git clone https://github.com/hakyimlab/PrediXcan
        wget https://s3.amazonaws.com/predictdb2/GTEx-V7_HapMap-2017-11-29.tar.gz
    #Step one: Predict:
        #Template for step one: PrediXcan.py --predict --dosages dosagefile_path --dosages_prefix chr --samples samples_file --weights prediction_db --output_prefix results/tissue
        #Script: 16a_PrediXcan1_loop.sh
            #Goes through each tissue db    
    #Convert PrediXcan Step one output to "geno" input for GEMMA
        #Script: 03_pred_exp_to_GEMMA_input.R (found in px_his_chol, forked from WheelerLab)
            #Creates "geno" input files for gemma
    #Step two: Associate: Run through GEMMA to account for relatedness and population stratification:
        #Template: gemma -g tissue_file -notsnp -p pheno.txt -k relationship_matrix.txt -c covariates.txt -lmm 4 -o pop_drug_tissue
        #Script: 16b_PrediXcan2_loop.sh
            #Goes through each tissue db and drug
    

#17 Run MulTiXcan:
    #Measures across all tissues, use only GTEx v7, no MESA
    #Script: 17a_MulTiXcan_phenos_ALL.R
        #Create pheno files in R: three columns: FID, IID, Pheno (include headers)
    #Script: 17b_MulTiXcan_loop_ALL.sh
        #Uses output from PrediXcan step one to measure expression across all tissues
        #outputs one file per drug per pop
        #Template for MultiXcan: MulTiXcan.py --expression_folder pop_predixcan_predict_output --expression_pattern "pop_results_(.*)_predicted_expression.txt" --input_phenos_file pop_drug_pheno --input_phenos_column Pheno --covariates_file covariates.txt --mode linear --output pop_drug_multixcan
            #include covariates to account for population stratification
    
    
#18 Go through PrediXcan results:
    #Combine Predixcan results:
        #Script: 09a_PrediXcan_output_combiner.R
            #Combine all tissue files into one file (per drug per pop)
            #run with pop set to ALL, 8 times one per drug
        #Script: 18a_PrediXcan_total_gene_count_ALL.R
            #Creates data frame of the number of genes measured in each tissue per population
    #Adjust p-values by running FDR adjustments:
        #Script: 09c_PrediXcan_pvalue_adjuster.R
            #input: combined files (one per drug per pop)
            #adjust p-values to account for false discovery, with BH and Bonferroni methods
            #join with bp_chrome file, which contains the chr # and bp position for each gene (needed for plotting)
            #run with ALL pop (loops through drugs)           
    #Make QQ and Manhattan plots in R:
        #Script: 09d_PrediXcan_plots.R
            #Creates QQ and Manhattan plots for each drug
            #Run with ALL pop (loops through drugs)
    #Run FUMA, gene2func: https://fuma.ctglab.nl/gene2func
        #Script: 09e_PrediXcan_FUMA.R
            #Creates files with top hits for each drug (approx 100 genes) - this is the input file for: Genes of interest
            #Creates file with list of all genes tested in multixcan - this is the input file for: Background genes
        #For Gene expression data sets select both GTEx v7 options
        #Title according to pop, software, and drug; ex: ALL_PrediXcan_arac
        #Look through gene sets
    #Compile top hits into single file
        #Script: 09f_PrediXcan_top_genes.R
            #Run with each pop, compiles top results across drugs into single file
            #Threshold: adj bonferroni p-values < 1
    #Look up top hits by ID on NCBI:

    
#19 Go through MulTiXcan results:
    #Adjust p-values by running FDR adjustments:
        #Script: 10a_MulTiXcan_pvalue_adjuster.R
            #adjust p-values to account for false discovery, with BH and Bonferroni methods
            #join with bp_chrome file, which contains the chr # and bp position for each gene (needed for plotting)
            #run with ALL pop (loops through drugs)
    #Make QQ and Manhattan plots in R:
        #Script: 10b_MulTiXcan_plots.R
            #Creates QQ and Manhattan plots for each drug in each population
            #Run three times, once per pop (loops through drugs)
    #Run FUMA, gene2func: https://fuma.ctglab.nl/gene2func
        #Script: 09e_PrediXcan_FUMA.R
            #Creates files with top hits for each drug (approx 100 genes) - this is the input file for: Genes of interest
            #Creates file with list of all genes tested in multixcan - this is the input file for: Background genes
        #For Gene expression data sets select both GTEx v7 options
        #Title according to pop, software, and drug; ex: ALL_PrediXcan_arac
        #Look through gene sets
    #Compile top hits into single file
        #Script: 10d_MulTiXcan_top_genes.R
            #Run with each pop, compiles top results across drugs into single file
            #Threshold: adj bonferroni p-values < 1
    #Look up top hits by ID on NCBI:
 



#Make Predicted expression plots of PrediXcan and MulTiXcan top hits
    #need affect size (af column in pred output bc it was run through gemma, not in mult output tho...)
    #Look at angela's github
    

